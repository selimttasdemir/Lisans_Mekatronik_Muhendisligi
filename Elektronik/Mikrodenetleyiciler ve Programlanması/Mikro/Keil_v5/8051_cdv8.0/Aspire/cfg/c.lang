<syntaxlights>  
<style>ANSI C</style> 

<chars>     
<name>String</name>
<fcolor>0xff00ff</fcolor> 
<bcolor>0xffff00</bcolor> 
<string>"'</string>
<escape>\</escape>
</chars>

<comments>     
<name>Comments</name>
<fcolor>0x005500</fcolor> 
<bcolor>0x101010</bcolor> 
<singl>//</singl>
<multiopen>/*</multiopen>
<multiclose>*/</multiclose>
</comments>

<identifier>
<name>Default colour</name>
<fcolor>0x000000</fcolor> 
<bcolor>0xffffff</bcolor> 
<selectfcolor>0xffffff</selectfcolor> 
<selectbcolor>0x000000</selectbcolor> 

<string>#_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</string>
</identifier>

<bad>
<name>Illegal char</name>
<fcolor>0xff0000</fcolor> 
<bcolor>0x000000</bcolor> 
</bad>


<digit>
<name>Digit</name>
<fcolor>0x0000ff</fcolor> 
<bcolor>0x000000</bcolor> 
</digit>

<operator>
<name>Operator</name>
<fcolor>0xff00ff</fcolor> 
<bcolor>0x000000</bcolor> 
<string>:[](){}.,&GT;&LT;+-*/%&|!~&=^?;</string>
</operator>

<group>
<name>Operator</name>
<fcolor>0xff00ff</fcolor> 
<bcolor>0xffff00</bcolor> 

<word>::</word>

<word>[</word>
<word>]</word>
<word>(</word>
<word>)</word>
<word>{</word>
<word>}</word>

<word>.</word>
<word>-&GT;</word>
<word>-&GT;*</word>
<word>++</word>
<word>--</word>
<word>*</word>
<word>&</word>
<word>+</word>
<word>-</word>
<word>!</word>
<word>~</word>
<word>.*</word>
<word>*</word>
<word>/</word>
<word>%</word>
<word>+</word>
<word>^</word>
<word>|</word>
<word>\</word>

<word>&LT;&LT;</word>
<word>&GT;&GT;</word>
<word>&LT;</word>
<word>&GT;</word>
<word>&LT;=</word>
<word>&GT;=</word>
<word>==</word>
<word>!=</word>
<word>&&</word>
<word>||</word>
<word>?</word>
<word>:</word>
<word>;</word>

<word>=</word>
<word>*=</word>
<word>/=</word>
<word>%=</word>
<word>+=</word>
<word>-=</word>
<word>&LT;&LT;=</word>
<word>&GT;&GT;=</word>
<word>&=</word>
<word>|=</word>
<word>^=</word>

<word>,</word>

</group>


<group>
<name>Data type</name>
<fcolor>0xff2088</fcolor> 
<bcolor>0xffff00</bcolor> 

<word>bool</word> 
<word>char</word>
<word>int</word>
<word>long</word>
<word>short</word>
<word>float</word>
<word>double</word>
<word>unsigned</word>
<word>signed</word>
<word>const</word>
<word>auto</word>
<word>register</word>
<word>volatile</word>
<word>mutable</word> 
<word>void</word> 
<word>static</word> 
<word>extern</word>
</group>

<group>
<name>Preprocessor</name>
<fcolor>0x0080ff</fcolor> 
<bcolor>0xffff00</bcolor> 

<word>#define</word> 
<word>#if</word>
<word>#ifdef</word>
<word>#ifndef</word>
<word>#endif</word>
<word>#else</word>    
<word>#elif<word>
<word>#import<word>
<word>#include<word>
<word>#undef<word>
<word>#line<word>
<word>##<word>
</group>

<group>
<name>Complex data type</name>
<fcolor>0x8000ff</fcolor> 
<bcolor>0xffff00</bcolor> 

<word>struct</word>
<word>enum</word>
<word>class</word>
<word>union</word>
<word>public</word>
<word>protected</word>
<word>private</word>
<word>friend</word>
<word>explicit</word>
<word>inline</word>
<word>namespace</word>
<word>operator</word>
<word>template</word>
<word>typedef</word>
<word>virtual</word>
</group>
 
<group>
<name>Keyword</name>
<fcolor>0x8828ff</fcolor> 
<bcolor>0xffff00</bcolor> 

<word>break</word>
<word>new</word>
<word>delete</word>
<word>do</word>
<word>while</word>
<word>goto</word>
<word>if</word>
<word>else</word>
<word>return</word>
<word>reinterpret_cast</word>
<word>sizeof</word>
<word>static_cast</word>
<word>switch</word>
<word>case</word>
<word>default</word>
<word>for</word>
<word>continue</word>
<word>try</word>
<word>catch</word>
<word>throw</word>
<word>typename</word>
<word>type_info</word>
<word>using</word>
</group>

<group>     
<name>Special</name>
<fcolor>0x100020</fcolor> 
<bcolor>0xffff00</bcolor> 

<word>true</word>
<word>false</word>
<word>this</word>
</group>

<group>     
<name>Number</name>
<fcolor>0xff00ff</fcolor> 
<bcolor>0xffff00</bcolor> 
</group>

 

</syntaxlights>
